<?xml version="1.0" encoding="utf-8"?>
<ttFont ttLibVersion="2.4">

  <fpgm>
    <assembly>
      PUSH[ ]
      0
      FDEF[ ]
      PUSH[ ]
      32
      ADD[ ]
      FLOOR[ ]
      ENDF[ ]
      PUSH[ ]
      1
      FDEF[ ]
      DUP[ ]
      ABS[ ]
      DUP[ ]
      PUSH[ ]
      192
      LT[ ]
      PUSH[ ]
      4
      MINDEX[ ]
      AND[ ]
      PUSH[ ]
      4
      RCVT[ ]
      OR[ ]
      IF[ ]
      POP[ ]
      SWAP[ ]
      POP[ ]
      ELSE[ ]
      ROLL[ ]
      IF[ ]
      DUP[ ]
      PUSH[ ]
      80
      LT[ ]
      IF[ ]
      POP[ ]
      PUSH[ ]
      64
      EIF[ ]
      ELSE[ ]
      DUP[ ]
      PUSH[ ]
      56
      LT[ ]
      IF[ ]
      POP[ ]
      PUSH[ ]
      56
      EIF[ ]
      EIF[ ]
      DUP[ ]
      PUSH[ ]
      11
      RCVT[ ]
      SUB[ ]
      ABS[ ]
      PUSH[ ]
      40
      LT[ ]
      IF[ ]
      POP[ ]
      PUSH[ ]
      11
      RCVT[ ]
      DUP[ ]
      PUSH[ ]
      48
      LT[ ]
      IF[ ]
      POP[ ]
      PUSH[ ]
      48
      EIF[ ]
      ELSE[ ]
      DUP[ ]
      PUSH[ ]
      192
      LT[ ]
      IF[ ]
      DUP[ ]
      FLOOR[ ]
      DUP[ ]
      ROLL[ ]
      ROLL[ ]
      SUB[ ]
      DUP[ ]
      PUSH[ ]
      10
      LT[ ]
      IF[ ]
      ADD[ ]
      ELSE[ ]
      DUP[ ]
      PUSH[ ]
      32
      LT[ ]
      IF[ ]
      POP[ ]
      PUSH[ ]
      10
      ADD[ ]
      ELSE[ ]
      DUP[ ]
      PUSH[ ]
      54
      LT[ ]
      IF[ ]
      POP[ ]
      PUSH[ ]
      54
      ADD[ ]
      ELSE[ ]
      ADD[ ]
      EIF[ ]
      EIF[ ]
      EIF[ ]
      ELSE[ ]
      PUSH[ ]
      0
      CALL[ ]
      EIF[ ]
      EIF[ ]
      SWAP[ ]
      PUSH[ ]
      0
      LT[ ]
      IF[ ]
      NEG[ ]
      EIF[ ]
      EIF[ ]
      ENDF[ ]
      PUSH[ ]
      2
      FDEF[ ]
      DUP[ ]
      RCVT[ ]
      DUP[ ]
      PUSH[ ]
      4
      CINDEX[ ]
      SUB[ ]
      ABS[ ]
      DUP[ ]
      PUSH[ ]
      5
      RS[ ]
      LT[ ]
      IF[ ]
      PUSH[ ]
      5
      SWAP[ ]
      WS[ ]
      PUSH[ ]
      6
      SWAP[ ]
      WS[ ]
      ELSE[ ]
      POP[ ]
      POP[ ]
      EIF[ ]
      PUSH[ ]
      1
      ADD[ ]
      ENDF[ ]
      PUSH[ ]
      3
      FDEF[ ]
      SWAP[ ]
      POP[ ]
      SWAP[ ]
      POP[ ]
      DUP[ ]
      ABS[ ]
      PUSH[ ]  /* 2 values pushed */
      5 98
      WS[ ]
      DUP[ ]
      PUSH[ ]
      6
      SWAP[ ]
      WS[ ]
      PUSH[ ]  /* 3 values pushed */
      11 1 2
      LOOPCALL[ ]
      POP[ ]
      DUP[ ]
      PUSH[ ]
      6
      RS[ ]
      DUP[ ]
      ROLL[ ]
      DUP[ ]
      ROLL[ ]
      PUSH[ ]
      0
      CALL[ ]
      PUSH[ ]  /* 2 values pushed */
      48 5
      CINDEX[ ]
      ROLL[ ]
      LTEQ[ ]
      IF[ ]
      ADD[ ]
      LT[ ]
      ELSE[ ]
      SUB[ ]
      GT[ ]
      EIF[ ]
      IF[ ]
      SWAP[ ]
      EIF[ ]
      POP[ ]
      DUP[ ]
      PUSH[ ]
      64
      GTEQ[ ]
      IF[ ]
      PUSH[ ]
      0
      CALL[ ]
      ELSE[ ]
      POP[ ]
      PUSH[ ]
      64
      EIF[ ]
      SWAP[ ]
      PUSH[ ]
      0
      LT[ ]
      IF[ ]
      NEG[ ]
      EIF[ ]
      ENDF[ ]
      PUSH[ ]
      4
      FDEF[ ]
      PUSH[ ]
      8
      SWAP[ ]
      WS[ ]
      PUSH[ ]
      7
      SWAP[ ]
      WS[ ]
      PUSH[ ]
      0
      SWAP[ ]
      WS[ ]
      PUSH[ ]
      0
      RS[ ]
      PUSH[ ]
      7
      RS[ ]
      LTEQ[ ]
      IF[ ]
      PUSH[ ]
      8
      RS[ ]
      CALL[ ]
      PUSH[ ]  /* 3 values pushed */
      0 1 0
      RS[ ]
      ADD[ ]
      WS[ ]
      PUSH[ ]
      22
      NEG[ ]
      JMPR[ ]
      EIF[ ]
      ENDF[ ]
      PUSH[ ]
      5
      FDEF[ ]
      PUSH[ ]
      0
      RS[ ]
      DUP[ ]
      RCVT[ ]
      DUP[ ]
      PUSH[ ]
      2
      RCVT[ ]
      MUL[ ]
      PUSH[ ]
      1
      RCVT[ ]
      DIV[ ]
      ADD[ ]
      WCVTP[ ]
      ENDF[ ]
      PUSH[ ]
      6
      FDEF[ ]
      PUSH[ ]
      0
      RS[ ]
      DUP[ ]
      RCVT[ ]
      DUP[ ]
      PUSH[ ]
      0
      CALL[ ]
      SWAP[ ]
      PUSH[ ]  /* 2 values pushed */
      8 4
      CINDEX[ ]
      ADD[ ]
      DUP[ ]
      RCVT[ ]
      ROLL[ ]
      SWAP[ ]
      SUB[ ]
      DUP[ ]
      ABS[ ]
      DUP[ ]
      PUSH[ ]
      32
      LT[ ]
      IF[ ]
      POP[ ]
      PUSH[ ]
      0
      ELSE[ ]
      PUSH[ ]
      48
      LT[ ]
      IF[ ]
      PUSH[ ]
      32
      ELSE[ ]
      PUSH[ ]
      64
      EIF[ ]
      EIF[ ]
      SWAP[ ]
      PUSH[ ]
      0
      LT[ ]
      IF[ ]
      NEG[ ]
      EIF[ ]
      PUSH[ ]
      3
      CINDEX[ ]
      SWAP[ ]
      SUB[ ]
      WCVTP[ ]
      WCVTP[ ]
      ENDF[ ]
      PUSH[ ]
      7
      FDEF[ ]
      PUSH[ ]  /* 2 values pushed */
      5 5
      RCVT[ ]
      PUSH[ ]
      1
      SUB[ ]
      WCVTP[ ]
      ENDF[ ]
      PUSH[ ]
      8
      FDEF[ ]
      PUSH[ ]
      1
      ADD[ ]
      DUP[ ]
      DUP[ ]
      PUSH[ ]
      10
      RS[ ]
      MD[1]
      PUSH[ ]
      0
      LT[ ]
      IF[ ]
      DUP[ ]
      PUSH[ ]
      10
      SWAP[ ]
      WS[ ]
      EIF[ ]
      PUSH[ ]
      11
      RS[ ]
      MD[1]
      PUSH[ ]
      0
      GT[ ]
      IF[ ]
      DUP[ ]
      PUSH[ ]
      11
      SWAP[ ]
      WS[ ]
      EIF[ ]
      ENDF[ ]
      PUSH[ ]
      9
      FDEF[ ]
      DUP[ ]
      PUSH[ ]
      1024
      DIV[ ]
      DUP[ ]
      PUSH[ ]
      1024
      MUL[ ]
      ROLL[ ]
      SWAP[ ]
      SUB[ ]
      PUSH[ ]
      12
      RS[ ]
      ADD[ ]
      DUP[ ]
      ROLL[ ]
      ADD[ ]
      DUP[ ]
      PUSH[ ]
      12
      SWAP[ ]
      WS[ ]
      SWAP[ ]
      ENDF[ ]
      PUSH[ ]
      10
      FDEF[ ]
      MPPEM[ ]
      EQ[ ]
      IF[ ]
      PUSH[ ]  /* 2 values pushed */
      7 1
      WCVTP[ ]
      EIF[ ]
      DEPTH[ ]
      PUSH[ ]
      13
      NEG[ ]
      SWAP[ ]
      JROT[ ]
      ENDF[ ]
      PUSH[ ]
      11
      FDEF[ ]
      MPPEM[ ]
      LTEQ[ ]
      IF[ ]
      MPPEM[ ]
      GTEQ[ ]
      IF[ ]
      PUSH[ ]  /* 2 values pushed */
      7 1
      WCVTP[ ]
      EIF[ ]
      ELSE[ ]
      POP[ ]
      EIF[ ]
      DEPTH[ ]
      PUSH[ ]
      19
      NEG[ ]
      SWAP[ ]
      JROT[ ]
      ENDF[ ]
      PUSH[ ]
      12
      FDEF[ ]
      PUSH[ ]  /* 2 values pushed */
      0 13
      RS[ ]
      NEQ[ ]
      IF[ ]
      PUSH[ ]  /* 2 values pushed */
      13 13
      RS[ ]
      PUSH[ ]
      1
      SUB[ ]
      WS[ ]
      PUSH[ ]
      9
      CALL[ ]
      EIF[ ]
      PUSH[ ]
      0
      RS[ ]
      PUSH[ ]
      2
      CINDEX[ ]
      WS[ ]
      PUSH[ ]  /* 3 values pushed */
      0 1 0
      RS[ ]
      ADD[ ]
      WS[ ]
      PUSH[ ]  /* 2 values pushed */
      10 2
      CINDEX[ ]
      WS[ ]
      PUSH[ ]  /* 2 values pushed */
      11 2
      CINDEX[ ]
      WS[ ]
      PUSH[ ]
      1
      SZPS[ ]
      SWAP[ ]
      DUP[ ]
      PUSH[ ]
      3
      CINDEX[ ]
      LT[ ]
      IF[ ]
      PUSH[ ]
      0
      RS[ ]
      PUSH[ ]
      4
      CINDEX[ ]
      WS[ ]
      ROLL[ ]
      ROLL[ ]
      DUP[ ]
      ROLL[ ]
      SWAP[ ]
      SUB[ ]
      PUSH[ ]
      8
      LOOPCALL[ ]
      POP[ ]
      SWAP[ ]
      PUSH[ ]
      1
      SUB[ ]
      DUP[ ]
      ROLL[ ]
      SWAP[ ]
      SUB[ ]
      PUSH[ ]
      8
      LOOPCALL[ ]
      POP[ ]
      ELSE[ ]
      PUSH[ ]
      0
      RS[ ]
      PUSH[ ]
      2
      CINDEX[ ]
      WS[ ]
      PUSH[ ]
      2
      CINDEX[ ]
      SUB[ ]
      PUSH[ ]
      8
      LOOPCALL[ ]
      POP[ ]
      EIF[ ]
      PUSH[ ]
      10
      RS[ ]
      GC[1]
      PUSH[ ]
      11
      RS[ ]
      GC[1]
      ADD[ ]
      PUSH[ ]
      128
      DIV[ ]
      DUP[ ]
      PUSH[ ]
      2
      RCVT[ ]
      MUL[ ]
      PUSH[ ]
      1
      RCVT[ ]
      DIV[ ]
      ADD[ ]
      PUSH[ ]  /* 2 values pushed */
      0 0
      SZP0[ ]
      SWAP[ ]
      WCVTP[ ]
      PUSH[ ]
      1
      RS[ ]
      PUSH[ ]
      0
      MIAP[0]
      PUSH[ ]  /* 3 values pushed */
      1 1 1
      RS[ ]
      ADD[ ]
      WS[ ]
      ENDF[ ]
      PUSH[ ]
      13
      FDEF[ ]
      PUSH[ ]  /* 2 values pushed */
      0 5
      RCVT[ ]
      EQ[ ]
      IF[ ]
      SVTCA[0]
      PUSH[ ]
      13
      SWAP[ ]
      WS[ ]
      DUP[ ]
      ADD[ ]
      PUSH[ ]
      1
      SUB[ ]
      PUSH[ ]  /* 6 values pushed */
      14 14 1 0 12 0
      WS[ ]
      WS[ ]
      ROLL[ ]
      ADD[ ]
      PUSH[ ]  /* 2 values pushed */
      12 4
      CALL[ ]
      PUSH[ ]
      107
      CALL[ ]
      ELSE[ ]
      CLEAR[ ]
      EIF[ ]
      ENDF[ ]
      PUSH[ ]
      14
      FDEF[ ]
      PUSH[ ]  /* 2 values pushed */
      0 13
      CALL[ ]
      ENDF[ ]
      PUSH[ ]
      15
      FDEF[ ]
      PUSH[ ]  /* 2 values pushed */
      1 13
      CALL[ ]
      ENDF[ ]
      PUSH[ ]
      16
      FDEF[ ]
      PUSH[ ]  /* 2 values pushed */
      2 13
      CALL[ ]
      ENDF[ ]
      PUSH[ ]
      17
      FDEF[ ]
      PUSH[ ]  /* 2 values pushed */
      3 13
      CALL[ ]
      ENDF[ ]
      PUSH[ ]
      18
      FDEF[ ]
      PUSH[ ]  /* 2 values pushed */
      4 13
      CALL[ ]
      ENDF[ ]
      PUSH[ ]
      19
      FDEF[ ]
      PUSH[ ]  /* 2 values pushed */
      5 13
      CALL[ ]
      ENDF[ ]
      PUSH[ ]
      20
      FDEF[ ]
      PUSH[ ]  /* 2 values pushed */
      6 13
      CALL[ ]
      ENDF[ ]
      PUSH[ ]
      21
      FDEF[ ]
      PUSH[ ]  /* 2 values pushed */
      7 13
      CALL[ ]
      ENDF[ ]
      PUSH[ ]
      22
      FDEF[ ]
      PUSH[ ]  /* 2 values pushed */
      8 13
      CALL[ ]
      ENDF[ ]
      PUSH[ ]
      23
      FDEF[ ]
      PUSH[ ]  /* 2 values pushed */
      9 13
      CALL[ ]
      ENDF[ ]
      PUSH[ ]
      24
      FDEF[ ]
      PUSH[ ]
      7
      CALL[ ]
      PUSH[ ]  /* 2 values pushed */
      0 5
      RCVT[ ]
      EQ[ ]
      IF[ ]
      SVTCA[0]
      PUSH[ ]
      13
      SWAP[ ]
      WS[ ]
      DUP[ ]
      ADD[ ]
      PUSH[ ]
      1
      SUB[ ]
      PUSH[ ]  /* 6 values pushed */
      14 14 1 0 12 0
      WS[ ]
      WS[ ]
      ROLL[ ]
      ADD[ ]
      PUSH[ ]  /* 2 values pushed */
      12 4
      CALL[ ]
      PUSH[ ]
      107
      CALL[ ]
      ELSE[ ]
      CLEAR[ ]
      EIF[ ]
      ENDF[ ]
      PUSH[ ]
      25
      FDEF[ ]
      PUSH[ ]  /* 2 values pushed */
      0 24
      CALL[ ]
      ENDF[ ]
      PUSH[ ]
      26
      FDEF[ ]
      PUSH[ ]  /* 2 values pushed */
      1 24
      CALL[ ]
      ENDF[ ]
      PUSH[ ]
      27
      FDEF[ ]
      PUSH[ ]  /* 2 values pushed */
      2 24
      CALL[ ]
      ENDF[ ]
      PUSH[ ]
      28
      FDEF[ ]
      PUSH[ ]  /* 2 values pushed */
      3 24
      CALL[ ]
      ENDF[ ]
      PUSH[ ]
      29
      FDEF[ ]
      PUSH[ ]  /* 2 values pushed */
      4 24
      CALL[ ]
      ENDF[ ]
      PUSH[ ]
      30
      FDEF[ ]
      PUSH[ ]  /* 2 values pushed */
      5 24
      CALL[ ]
      ENDF[ ]
      PUSH[ ]
      31
      FDEF[ ]
      PUSH[ ]  /* 2 values pushed */
      6 24
      CALL[ ]
      ENDF[ ]
      PUSH[ ]
      32
      FDEF[ ]
      PUSH[ ]  /* 2 values pushed */
      7 24
      CALL[ ]
      ENDF[ ]
      PUSH[ ]
      33
      FDEF[ ]
      PUSH[ ]  /* 2 values pushed */
      8 24
      CALL[ ]
      ENDF[ ]
      PUSH[ ]
      34
      FDEF[ ]
      PUSH[ ]  /* 2 values pushed */
      9 24
      CALL[ ]
      ENDF[ ]
      PUSH[ ]
      35
      FDEF[ ]
      DUP[ ]
      ADD[ ]
      PUSH[ ]
      14
      ADD[ ]
      DUP[ ]
      RS[ ]
      SWAP[ ]
      PUSH[ ]
      1
      ADD[ ]
      RS[ ]
      PUSH[ ]
      2
      CINDEX[ ]
      PUSH[ ]
      2
      CINDEX[ ]
      LTEQ[ ]
      IF[ ]
      SWAP[ ]
      DUP[ ]
      ALIGNRP[ ]
      PUSH[ ]
      1
      ADD[ ]
      SWAP[ ]
      PUSH[ ]
      18
      NEG[ ]
      JMPR[ ]
      ELSE[ ]
      POP[ ]
      POP[ ]
      EIF[ ]
      ENDF[ ]
      PUSH[ ]
      36
      FDEF[ ]
      PUSH[ ]
      35
      CALL[ ]
      PUSH[ ]
      35
      LOOPCALL[ ]
      ENDF[ ]
      PUSH[ ]
      37
      FDEF[ ]
      DUP[ ]
      DUP[ ]
      GC[1]
      DUP[ ]
      DUP[ ]
      PUSH[ ]
      2
      RCVT[ ]
      MUL[ ]
      PUSH[ ]
      1
      RCVT[ ]
      DIV[ ]
      ADD[ ]
      SWAP[ ]
      SUB[ ]
      SHPIX[ ]
      SWAP[ ]
      DUP[ ]
      ROLL[ ]
      NEQ[ ]
      IF[ ]
      DUP[ ]
      GC[1]
      DUP[ ]
      DUP[ ]
      PUSH[ ]
      2
      RCVT[ ]
      MUL[ ]
      PUSH[ ]
      1
      RCVT[ ]
      DIV[ ]
      ADD[ ]
      SWAP[ ]
      SUB[ ]
      SHPIX[ ]
      ELSE[ ]
      POP[ ]
      EIF[ ]
      ENDF[ ]
      PUSH[ ]
      38
      FDEF[ ]
      PUSH[ ]  /* 2 values pushed */
      0 5
      RCVT[ ]
      EQ[ ]
      IF[ ]
      SVTCA[0]
      PUSH[ ]
      1
      SZPS[ ]
      PUSH[ ]
      37
      LOOPCALL[ ]
      PUSH[ ]
      1
      SZP2[ ]
      IUP[0]
      ELSE[ ]
      CLEAR[ ]
      EIF[ ]
      ENDF[ ]
      PUSH[ ]
      39
      FDEF[ ]
      PUSH[ ]
      7
      CALL[ ]
      PUSH[ ]  /* 2 values pushed */
      0 5
      RCVT[ ]
      EQ[ ]
      IF[ ]
      SVTCA[0]
      PUSH[ ]
      1
      SZPS[ ]
      PUSH[ ]
      37
      LOOPCALL[ ]
      PUSH[ ]
      1
      SZP2[ ]
      IUP[0]
      ELSE[ ]
      CLEAR[ ]
      EIF[ ]
      ENDF[ ]
      PUSH[ ]
      40
      FDEF[ ]
      DUP[ ]
      SHC[1]
      PUSH[ ]
      1
      ADD[ ]
      ENDF[ ]
      PUSH[ ]
      41
      FDEF[ ]
      SVTCA[0]
      PUSH[ ]
      3
      RCVT[ ]
      MUL[ ]
      PUSH[ ]
      1
      RCVT[ ]
      DIV[ ]
      PUSH[ ]
      0
      CALL[ ]
      PUSH[ ]
      2
      RCVT[ ]
      MUL[ ]
      PUSH[ ]
      1
      RCVT[ ]
      DIV[ ]
      PUSH[ ]
      0
      CALL[ ]
      PUSH[ ]
      0
      SZPS[ ]
      PUSH[ ]  /* 5 values pushed */
      0 0 0 0 0
      WCVTP[ ]
      MIAP[0]
      SWAP[ ]
      SHPIX[ ]
      PUSH[ ]  /* 2 values pushed */
      40 1
      SZP2[ ]
      LOOPCALL[ ]
      ENDF[ ]
      PUSH[ ]
      42
      FDEF[ ]
      DUP[ ]
      ALIGNRP[ ]
      DUP[ ]
      GC[1]
      DUP[ ]
      PUSH[ ]
      2
      RCVT[ ]
      MUL[ ]
      PUSH[ ]
      1
      RCVT[ ]
      DIV[ ]
      ADD[ ]
      PUSH[ ]
      0
      RS[ ]
      SUB[ ]
      SHPIX[ ]
      ENDF[ ]
      PUSH[ ]
      43
      FDEF[ ]
      MDAP[0]
      SLOOP[ ]
      ALIGNRP[ ]
      ENDF[ ]
      PUSH[ ]
      44
      FDEF[ ]
      DUP[ ]
      ALIGNRP[ ]
      DUP[ ]
      GC[1]
      DUP[ ]
      PUSH[ ]
      2
      RCVT[ ]
      MUL[ ]
      PUSH[ ]
      1
      RCVT[ ]
      DIV[ ]
      ADD[ ]
      PUSH[ ]
      0
      RS[ ]
      SUB[ ]
      PUSH[ ]
      1
      RS[ ]
      MUL[ ]
      SHPIX[ ]
      ENDF[ ]
      PUSH[ ]
      45
      FDEF[ ]
      PUSH[ ]  /* 2 values pushed */
      2 0
      SZPS[ ]
      CINDEX[ ]
      DUP[ ]
      MDAP[0]
      DUP[ ]
      GC[1]
      PUSH[ ]
      0
      SWAP[ ]
      WS[ ]
      PUSH[ ]
      2
      CINDEX[ ]
      MD[0]
      ROLL[ ]
      ROLL[ ]
      GC[1]
      SWAP[ ]
      GC[1]
      SWAP[ ]
      SUB[ ]
      DUP[ ]
      IF[ ]
      DIV[ ]
      ELSE[ ]
      POP[ ]
      EIF[ ]
      PUSH[ ]
      1
      SWAP[ ]
      WS[ ]
      PUSH[ ]  /* 3 values pushed */
      44 1 1
      SZP2[ ]
      SZP1[ ]
      LOOPCALL[ ]
      ENDF[ ]
      PUSH[ ]
      46
      FDEF[ ]
      PUSH[ ]
      0
      SZPS[ ]
      PUSH[ ]
      4
      CINDEX[ ]
      PUSH[ ]
      4
      CINDEX[ ]
      GC[1]
      SWAP[ ]
      GC[1]
      SWAP[ ]
      SUB[ ]
      PUSH[ ]
      6
      RCVT[ ]
      CALL[ ]
      NEG[ ]
      ROLL[ ]
      MDAP[0]
      SWAP[ ]
      DUP[ ]
      DUP[ ]
      ALIGNRP[ ]
      ROLL[ ]
      SHPIX[ ]
      ENDF[ ]
      PUSH[ ]
      47
      FDEF[ ]
      PUSH[ ]
      0
      SZPS[ ]
      PUSH[ ]
      4
      CINDEX[ ]
      PUSH[ ]
      4
      CINDEX[ ]
      DUP[ ]
      MDAP[0]
      GC[1]
      SWAP[ ]
      GC[1]
      SWAP[ ]
      SUB[ ]
      DUP[ ]
      PUSH[ ]
      4
      SWAP[ ]
      WS[ ]
      PUSH[ ]
      6
      RCVT[ ]
      CALL[ ]
      DUP[ ]
      PUSH[ ]
      96
      LT[ ]
      IF[ ]
      DUP[ ]
      PUSH[ ]
      64
      LTEQ[ ]
      IF[ ]
      PUSH[ ]  /* 4 values pushed */
      2 32 3 32
      ELSE[ ]
      PUSH[ ]  /* 4 values pushed */
      2 38 3 26
      EIF[ ]
      WS[ ]
      WS[ ]
      SWAP[ ]
      DUP[ ]
      PUSH[ ]
      9
      RS[ ]
      DUP[ ]
      ROLL[ ]
      SWAP[ ]
      GC[1]
      SWAP[ ]
      GC[1]
      SWAP[ ]
      SUB[ ]
      SWAP[ ]
      GC[0]
      ADD[ ]
      PUSH[ ]
      4
      RS[ ]
      PUSH[ ]
      128
      DIV[ ]
      ADD[ ]
      DUP[ ]
      PUSH[ ]
      0
      CALL[ ]
      DUP[ ]
      ROLL[ ]
      ROLL[ ]
      SUB[ ]
      DUP[ ]
      PUSH[ ]
      2
      RS[ ]
      ADD[ ]
      ABS[ ]
      SWAP[ ]
      PUSH[ ]
      3
      RS[ ]
      SUB[ ]
      ABS[ ]
      LT[ ]
      IF[ ]
      PUSH[ ]
      2
      RS[ ]
      SUB[ ]
      ELSE[ ]
      PUSH[ ]
      3
      RS[ ]
      ADD[ ]
      EIF[ ]
      PUSH[ ]
      3
      CINDEX[ ]
      PUSH[ ]
      128
      DIV[ ]
      SUB[ ]
      SWAP[ ]
      DUP[ ]
      DUP[ ]
      PUSH[ ]
      4
      MINDEX[ ]
      SWAP[ ]
      GC[0]
      SUB[ ]
      SHPIX[ ]
      ELSE[ ]
      SWAP[ ]
      PUSH[ ]
      9
      RS[ ]
      GC[0]
      PUSH[ ]
      2
      CINDEX[ ]
      PUSH[ ]
      9
      RS[ ]
      GC[1]
      SWAP[ ]
      GC[1]
      SWAP[ ]
      SUB[ ]
      ADD[ ]
      DUP[ ]
      PUSH[ ]
      4
      RS[ ]
      PUSH[ ]
      128
      DIV[ ]
      ADD[ ]
      SWAP[ ]
      DUP[ ]
      PUSH[ ]
      0
      CALL[ ]
      SWAP[ ]
      PUSH[ ]
      4
      RS[ ]
      ADD[ ]
      PUSH[ ]
      0
      CALL[ ]
      PUSH[ ]
      5
      CINDEX[ ]
      SUB[ ]
      PUSH[ ]
      5
      CINDEX[ ]
      PUSH[ ]
      128
      DIV[ ]
      PUSH[ ]
      4
      MINDEX[ ]
      SUB[ ]
      DUP[ ]
      PUSH[ ]
      4
      CINDEX[ ]
      ADD[ ]
      ABS[ ]
      SWAP[ ]
      PUSH[ ]
      3
      CINDEX[ ]
      ADD[ ]
      ABS[ ]
      LT[ ]
      IF[ ]
      POP[ ]
      ELSE[ ]
      SWAP[ ]
      POP[ ]
      EIF[ ]
      SWAP[ ]
      DUP[ ]
      DUP[ ]
      PUSH[ ]
      4
      MINDEX[ ]
      SWAP[ ]
      GC[0]
      SUB[ ]
      SHPIX[ ]
      EIF[ ]
      ENDF[ ]
      PUSH[ ]
      48
      FDEF[ ]
      PUSH[ ]
      0
      SZPS[ ]
      DUP[ ]
      DUP[ ]
      DUP[ ]
      PUSH[ ]
      5
      MINDEX[ ]
      DUP[ ]
      MDAP[0]
      GC[1]
      SWAP[ ]
      GC[1]
      SWAP[ ]
      SUB[ ]
      SWAP[ ]
      ALIGNRP[ ]
      SHPIX[ ]
      ENDF[ ]
      PUSH[ ]
      49
      FDEF[ ]
      PUSH[ ]
      0
      SZPS[ ]
      DUP[ ]
      PUSH[ ]
      9
      SWAP[ ]
      WS[ ]
      DUP[ ]
      DUP[ ]
      DUP[ ]
      GC[0]
      SWAP[ ]
      GC[1]
      PUSH[ ]
      0
      CALL[ ]
      SWAP[ ]
      SUB[ ]
      SHPIX[ ]
      ENDF[ ]
      PUSH[ ]
      50
      FDEF[ ]
      PUSH[ ]
      0
      SZPS[ ]
      PUSH[ ]
      3
      CINDEX[ ]
      PUSH[ ]
      2
      CINDEX[ ]
      GC[1]
      SWAP[ ]
      GC[1]
      SWAP[ ]
      SUB[ ]
      PUSH[ ]
      0
      EQ[ ]
      IF[ ]
      MDAP[0]
      DUP[ ]
      ALIGNRP[ ]
      SWAP[ ]
      POP[ ]
      ELSE[ ]
      PUSH[ ]
      2
      CINDEX[ ]
      PUSH[ ]
      2
      CINDEX[ ]
      GC[1]
      SWAP[ ]
      GC[1]
      SWAP[ ]
      SUB[ ]
      DUP[ ]
      PUSH[ ]
      5
      CINDEX[ ]
      PUSH[ ]
      4
      CINDEX[ ]
      GC[1]
      SWAP[ ]
      GC[1]
      SWAP[ ]
      SUB[ ]
      PUSH[ ]
      6
      CINDEX[ ]
      PUSH[ ]
      5
      CINDEX[ ]
      MD[0]
      PUSH[ ]
      2
      CINDEX[ ]
      SUB[ ]
      PUSH[ ]
      1
      RCVT[ ]
      MUL[ ]
      SWAP[ ]
      DUP[ ]
      IF[ ]
      DIV[ ]
      ELSE[ ]
      POP[ ]
      EIF[ ]
      MUL[ ]
      PUSH[ ]
      1
      RCVT[ ]
      DIV[ ]
      ADD[ ]
      SWAP[ ]
      MDAP[0]
      SWAP[ ]
      DUP[ ]
      DUP[ ]
      ALIGNRP[ ]
      ROLL[ ]
      SHPIX[ ]
      SWAP[ ]
      POP[ ]
      EIF[ ]
      ENDF[ ]
      PUSH[ ]
      51
      FDEF[ ]
      PUSH[ ]
      0
      SZPS[ ]
      DUP[ ]
      PUSH[ ]
      9
      RS[ ]
      DUP[ ]
      MDAP[0]
      GC[1]
      SWAP[ ]
      GC[1]
      SWAP[ ]
      SUB[ ]
      DUP[ ]
      ADD[ ]
      PUSH[ ]
      32
      ADD[ ]
      FLOOR[ ]
      PUSH[ ]
      128
      DIV[ ]
      SWAP[ ]
      DUP[ ]
      DUP[ ]
      ALIGNRP[ ]
      ROLL[ ]
      SHPIX[ ]
      ENDF[ ]
      PUSH[ ]
      52
      FDEF[ ]
      SWAP[ ]
      DUP[ ]
      MDAP[0]
      GC[0]
      PUSH[ ]
      2
      CINDEX[ ]
      GC[0]
      GT[ ]
      IF[ ]
      DUP[ ]
      ALIGNRP[ ]
      EIF[ ]
      MDAP[0]
      PUSH[ ]  /* 2 values pushed */
      36 1
      SZP1[ ]
      CALL[ ]
      ENDF[ ]
      PUSH[ ]
      53
      FDEF[ ]
      SWAP[ ]
      DUP[ ]
      MDAP[0]
      GC[0]
      PUSH[ ]
      2
      CINDEX[ ]
      GC[0]
      LT[ ]
      IF[ ]
      DUP[ ]
      ALIGNRP[ ]
      EIF[ ]
      MDAP[0]
      PUSH[ ]  /* 2 values pushed */
      36 1
      SZP1[ ]
      CALL[ ]
      ENDF[ ]
      PUSH[ ]
      54
      FDEF[ ]
      SWAP[ ]
      DUP[ ]
      MDAP[0]
      GC[0]
      PUSH[ ]
      2
      CINDEX[ ]
      GC[0]
      GT[ ]
      IF[ ]
      DUP[ ]
      ALIGNRP[ ]
      EIF[ ]
      SWAP[ ]
      DUP[ ]
      MDAP[0]
      GC[0]
      PUSH[ ]
      2
      CINDEX[ ]
      GC[0]
      LT[ ]
      IF[ ]
      DUP[ ]
      ALIGNRP[ ]
      EIF[ ]
      MDAP[0]
      PUSH[ ]  /* 2 values pushed */
      36 1
      SZP1[ ]
      CALL[ ]
      ENDF[ ]
      PUSH[ ]
      55
      FDEF[ ]
      PUSH[ ]
      46
      CALL[ ]
      SWAP[ ]
      DUP[ ]
      MDAP[0]
      GC[0]
      PUSH[ ]
      2
      CINDEX[ ]
      GC[0]
      GT[ ]
      IF[ ]
      DUP[ ]
      ALIGNRP[ ]
      EIF[ ]
      MDAP[0]
      PUSH[ ]  /* 2 values pushed */
      36 1
      SZP1[ ]
      CALL[ ]
      ENDF[ ]
      PUSH[ ]
      56
      FDEF[ ]
      PUSH[ ]
      47
      CALL[ ]
      ROLL[ ]
      DUP[ ]
      DUP[ ]
      ALIGNRP[ ]
      PUSH[ ]
      4
      SWAP[ ]
      WS[ ]
      ROLL[ ]
      SHPIX[ ]
      SWAP[ ]
      DUP[ ]
      MDAP[0]
      GC[0]
      PUSH[ ]
      2
      CINDEX[ ]
      GC[0]
      GT[ ]
      IF[ ]
      DUP[ ]
      ALIGNRP[ ]
      EIF[ ]
      MDAP[0]
      PUSH[ ]  /* 2 values pushed */
      36 1
      SZP1[ ]
      CALL[ ]
      PUSH[ ]
      4
      RS[ ]
      MDAP[0]
      PUSH[ ]
      36
      CALL[ ]
      ENDF[ ]
      PUSH[ ]
      57
      FDEF[ ]
      PUSH[ ]
      0
      SZPS[ ]
      PUSH[ ]
      4
      CINDEX[ ]
      PUSH[ ]
      4
      MINDEX[ ]
      DUP[ ]
      MDAP[0]
      GC[1]
      SWAP[ ]
      GC[1]
      SWAP[ ]
      SUB[ ]
      PUSH[ ]
      6
      RCVT[ ]
      CALL[ ]
      SWAP[ ]
      DUP[ ]
      ALIGNRP[ ]
      DUP[ ]
      MDAP[0]
      SWAP[ ]
      SHPIX[ ]
      PUSH[ ]  /* 2 values pushed */
      36 1
      SZP1[ ]
      CALL[ ]
      ENDF[ ]
      PUSH[ ]
      58
      FDEF[ ]
      PUSH[ ]  /* 2 values pushed */
      9 4
      CINDEX[ ]
      WS[ ]
      PUSH[ ]
      0
      SZPS[ ]
      PUSH[ ]
      4
      CINDEX[ ]
      PUSH[ ]
      4
      CINDEX[ ]
      DUP[ ]
      MDAP[0]
      GC[1]
      SWAP[ ]
      GC[1]
      SWAP[ ]
      SUB[ ]
      DUP[ ]
      PUSH[ ]
      4
      SWAP[ ]
      WS[ ]
      PUSH[ ]
      6
      RCVT[ ]
      CALL[ ]
      DUP[ ]
      PUSH[ ]
      96
      LT[ ]
      IF[ ]
      DUP[ ]
      PUSH[ ]
      64
      LTEQ[ ]
      IF[ ]
      PUSH[ ]  /* 4 values pushed */
      2 32 3 32
      ELSE[ ]
      PUSH[ ]  /* 4 values pushed */
      2 38 3 26
      EIF[ ]
      WS[ ]
      WS[ ]
      SWAP[ ]
      DUP[ ]
      GC[1]
      PUSH[ ]
      4
      RS[ ]
      PUSH[ ]
      128
      DIV[ ]
      ADD[ ]
      DUP[ ]
      PUSH[ ]
      0
      CALL[ ]
      DUP[ ]
      ROLL[ ]
      ROLL[ ]
      SUB[ ]
      DUP[ ]
      PUSH[ ]
      2
      RS[ ]
      ADD[ ]
      ABS[ ]
      SWAP[ ]
      PUSH[ ]
      3
      RS[ ]
      SUB[ ]
      ABS[ ]
      LT[ ]
      IF[ ]
      PUSH[ ]
      2
      RS[ ]
      SUB[ ]
      ELSE[ ]
      PUSH[ ]
      3
      RS[ ]
      ADD[ ]
      EIF[ ]
      PUSH[ ]
      3
      CINDEX[ ]
      PUSH[ ]
      128
      DIV[ ]
      SUB[ ]
      PUSH[ ]
      2
      CINDEX[ ]
      GC[0]
      SUB[ ]
      SHPIX[ ]
      SWAP[ ]
      DUP[ ]
      ALIGNRP[ ]
      SWAP[ ]
      SHPIX[ ]
      ELSE[ ]
      POP[ ]
      DUP[ ]
      DUP[ ]
      GC[0]
      SWAP[ ]
      GC[1]
      PUSH[ ]
      0
      CALL[ ]
      SWAP[ ]
      SUB[ ]
      SHPIX[ ]
      POP[ ]
      EIF[ ]
      PUSH[ ]  /* 2 values pushed */
      36 1
      SZP1[ ]
      CALL[ ]
      ENDF[ ]
      PUSH[ ]
      59
      FDEF[ ]
      PUSH[ ]
      46
      CALL[ ]
      MDAP[0]
      PUSH[ ]  /* 2 values pushed */
      36 1
      SZP1[ ]
      CALL[ ]
      ENDF[ ]
      PUSH[ ]
      60
      FDEF[ ]
      PUSH[ ]
      47
      CALL[ ]
      POP[ ]
      SWAP[ ]
      DUP[ ]
      DUP[ ]
      ALIGNRP[ ]
      PUSH[ ]
      4
      SWAP[ ]
      WS[ ]
      SWAP[ ]
      SHPIX[ ]
      PUSH[ ]  /* 2 values pushed */
      36 1
      SZP1[ ]
      CALL[ ]
      PUSH[ ]
      4
      RS[ ]
      MDAP[0]
      PUSH[ ]
      36
      CALL[ ]
      ENDF[ ]
      PUSH[ ]
      61
      FDEF[ ]
      PUSH[ ]
      0
      SZP2[ ]
      DUP[ ]
      GC[1]
      PUSH[ ]
      0
      SWAP[ ]
      WS[ ]
      PUSH[ ]  /* 3 values pushed */
      0 1 1
      SZP2[ ]
      SZP1[ ]
      SZP0[ ]
      MDAP[0]
      PUSH[ ]
      42
      LOOPCALL[ ]
      ENDF[ ]
      PUSH[ ]
      62
      FDEF[ ]
      PUSH[ ]
      0
      SZP2[ ]
      DUP[ ]
      GC[1]
      PUSH[ ]
      0
      SWAP[ ]
      WS[ ]
      PUSH[ ]  /* 3 values pushed */
      0 1 1
      SZP2[ ]
      SZP1[ ]
      SZP0[ ]
      MDAP[0]
      PUSH[ ]
      42
      LOOPCALL[ ]
      ENDF[ ]
      PUSH[ ]
      63
      FDEF[ ]
      PUSH[ ]  /* 2 values pushed */
      0 1
      SZP1[ ]
      SZP0[ ]
      PUSH[ ]
      43
      LOOPCALL[ ]
      ENDF[ ]
      PUSH[ ]
      64
      FDEF[ ]
      PUSH[ ]
      45
      LOOPCALL[ ]
      ENDF[ ]
      PUSH[ ]
      65
      FDEF[ ]
      PUSH[ ]
      0
      SZPS[ ]
      RCVT[ ]
      SWAP[ ]
      DUP[ ]
      MDAP[0]
      DUP[ ]
      GC[0]
      ROLL[ ]
      SWAP[ ]
      SUB[ ]
      SHPIX[ ]
      PUSH[ ]  /* 2 values pushed */
      36 1
      SZP1[ ]
      CALL[ ]
      ENDF[ ]
      PUSH[ ]
      66
      FDEF[ ]
      PUSH[ ]
      9
      SWAP[ ]
      WS[ ]
      PUSH[ ]
      65
      CALL[ ]
      ENDF[ ]
      PUSH[ ]
      67
      FDEF[ ]
      PUSH[ ]  /* 3 values pushed */
      0 0 58
      CALL[ ]
      ENDF[ ]
      PUSH[ ]
      68
      FDEF[ ]
      PUSH[ ]  /* 3 values pushed */
      0 1 58
      CALL[ ]
      ENDF[ ]
      PUSH[ ]
      69
      FDEF[ ]
      PUSH[ ]  /* 3 values pushed */
      1 0 58
      CALL[ ]
      ENDF[ ]
      PUSH[ ]
      70
      FDEF[ ]
      PUSH[ ]  /* 3 values pushed */
      1 1 58
      CALL[ ]
      ENDF[ ]
      PUSH[ ]
      71
      FDEF[ ]
      PUSH[ ]  /* 3 values pushed */
      0 0 59
      CALL[ ]
      ENDF[ ]
      PUSH[ ]
      72
      FDEF[ ]
      PUSH[ ]  /* 3 values pushed */
      0 1 59
      CALL[ ]
      ENDF[ ]
      PUSH[ ]
      73
      FDEF[ ]
      PUSH[ ]  /* 3 values pushed */
      1 0 59
      CALL[ ]
      ENDF[ ]
      PUSH[ ]
      74
      FDEF[ ]
      PUSH[ ]  /* 3 values pushed */
      1 1 59
      CALL[ ]
      ENDF[ ]
      PUSH[ ]
      75
      FDEF[ ]
      PUSH[ ]  /* 3 values pushed */
      0 0 55
      CALL[ ]
      ENDF[ ]
      PUSH[ ]
      76
      FDEF[ ]
      PUSH[ ]  /* 3 values pushed */
      0 1 55
      CALL[ ]
      ENDF[ ]
      PUSH[ ]
      77
      FDEF[ ]
      PUSH[ ]  /* 3 values pushed */
      1 0 55
      CALL[ ]
      ENDF[ ]
      PUSH[ ]
      78
      FDEF[ ]
      PUSH[ ]  /* 3 values pushed */
      1 1 55
      CALL[ ]
      ENDF[ ]
      PUSH[ ]
      79
      FDEF[ ]
      PUSH[ ]  /* 3 values pushed */
      0 0 57
      CALL[ ]
      ENDF[ ]
      PUSH[ ]
      80
      FDEF[ ]
      PUSH[ ]  /* 3 values pushed */
      0 1 57
      CALL[ ]
      ENDF[ ]
      PUSH[ ]
      81
      FDEF[ ]
      PUSH[ ]  /* 3 values pushed */
      1 0 57
      CALL[ ]
      ENDF[ ]
      PUSH[ ]
      82
      FDEF[ ]
      PUSH[ ]  /* 3 values pushed */
      1 1 57
      CALL[ ]
      ENDF[ ]
      PUSH[ ]
      83
      FDEF[ ]
      PUSH[ ]  /* 3 values pushed */
      0 0 60
      CALL[ ]
      ENDF[ ]
      PUSH[ ]
      84
      FDEF[ ]
      PUSH[ ]  /* 3 values pushed */
      0 1 60
      CALL[ ]
      ENDF[ ]
      PUSH[ ]
      85
      FDEF[ ]
      PUSH[ ]  /* 3 values pushed */
      1 0 60
      CALL[ ]
      ENDF[ ]
      PUSH[ ]
      86
      FDEF[ ]
      PUSH[ ]  /* 3 values pushed */
      1 1 60
      CALL[ ]
      ENDF[ ]
      PUSH[ ]
      87
      FDEF[ ]
      PUSH[ ]  /* 3 values pushed */
      0 0 56
      CALL[ ]
      ENDF[ ]
      PUSH[ ]
      88
      FDEF[ ]
      PUSH[ ]  /* 3 values pushed */
      0 1 56
      CALL[ ]
      ENDF[ ]
      PUSH[ ]
      89
      FDEF[ ]
      PUSH[ ]  /* 3 values pushed */
      1 0 56
      CALL[ ]
      ENDF[ ]
      PUSH[ ]
      90
      FDEF[ ]
      PUSH[ ]  /* 3 values pushed */
      1 1 56
      CALL[ ]
      ENDF[ ]
      PUSH[ ]
      91
      FDEF[ ]
      PUSH[ ]
      48
      CALL[ ]
      MDAP[0]
      PUSH[ ]  /* 2 values pushed */
      36 1
      SZP1[ ]
      CALL[ ]
      ENDF[ ]
      PUSH[ ]
      92
      FDEF[ ]
      PUSH[ ]
      48
      CALL[ ]
      PUSH[ ]
      52
      CALL[ ]
      ENDF[ ]
      PUSH[ ]
      93
      FDEF[ ]
      PUSH[ ]
      48
      CALL[ ]
      PUSH[ ]
      53
      CALL[ ]
      ENDF[ ]
      PUSH[ ]
      94
      FDEF[ ]
      PUSH[ ]
      0
      SZPS[ ]
      PUSH[ ]
      48
      CALL[ ]
      PUSH[ ]
      54
      CALL[ ]
      ENDF[ ]
      PUSH[ ]
      95
      FDEF[ ]
      PUSH[ ]
      49
      CALL[ ]
      MDAP[0]
      PUSH[ ]  /* 2 values pushed */
      36 1
      SZP1[ ]
      CALL[ ]
      ENDF[ ]
      PUSH[ ]
      96
      FDEF[ ]
      PUSH[ ]
      49
      CALL[ ]
      PUSH[ ]
      52
      CALL[ ]
      ENDF[ ]
      PUSH[ ]
      97
      FDEF[ ]
      PUSH[ ]
      49
      CALL[ ]
      PUSH[ ]
      53
      CALL[ ]
      ENDF[ ]
      PUSH[ ]
      98
      FDEF[ ]
      PUSH[ ]
      49
      CALL[ ]
      PUSH[ ]
      54
      CALL[ ]
      ENDF[ ]
      PUSH[ ]
      99
      FDEF[ ]
      PUSH[ ]
      50
      CALL[ ]
      MDAP[0]
      PUSH[ ]  /* 2 values pushed */
      36 1
      SZP1[ ]
      CALL[ ]
      ENDF[ ]
      PUSH[ ]
      100
      FDEF[ ]
      PUSH[ ]
      50
      CALL[ ]
      PUSH[ ]
      52
      CALL[ ]
      ENDF[ ]
      PUSH[ ]
      101
      FDEF[ ]
      PUSH[ ]
      50
      CALL[ ]
      PUSH[ ]
      53
      CALL[ ]
      ENDF[ ]
      PUSH[ ]
      102
      FDEF[ ]
      PUSH[ ]
      50
      CALL[ ]
      PUSH[ ]
      54
      CALL[ ]
      ENDF[ ]
      PUSH[ ]
      103
      FDEF[ ]
      PUSH[ ]
      51
      CALL[ ]
      MDAP[0]
      PUSH[ ]  /* 2 values pushed */
      36 1
      SZP1[ ]
      CALL[ ]
      ENDF[ ]
      PUSH[ ]
      104
      FDEF[ ]
      PUSH[ ]
      51
      CALL[ ]
      PUSH[ ]
      52
      CALL[ ]
      ENDF[ ]
      PUSH[ ]
      105
      FDEF[ ]
      PUSH[ ]
      51
      CALL[ ]
      PUSH[ ]
      53
      CALL[ ]
      ENDF[ ]
      PUSH[ ]
      106
      FDEF[ ]
      PUSH[ ]
      51
      CALL[ ]
      PUSH[ ]
      54
      CALL[ ]
      ENDF[ ]
      PUSH[ ]
      107
      FDEF[ ]
      CALL[ ]
      PUSH[ ]
      8
      NEG[ ]
      PUSH[ ]
      3
      DEPTH[ ]
      LT[ ]
      JROT[ ]
      PUSH[ ]
      1
      SZP2[ ]
      IUP[0]
      ENDF[ ]
    </assembly>
  </fpgm>

</ttFont>
